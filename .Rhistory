devtools::check()
devtools::check()
devtools::check()
devtools::test()
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=3, seed=1)
phi_results = estimateCDCC(rt)
phi_results
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
phi_results
phi_results$phi
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
?case_when
devtools::test()
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
devtools::test()
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
robust_phi_results$phi
robust_phi_results$eta
robust_phi_results$eta$alpha
phi_results$eta$alpha
phi_results$eta$beta
robust_calc_Rt(rt=robust_phi_results$epsilon, phi=robust_phi_results$phi,
S=diag(2), delta=.975)
robust_Rt$w
robust_Rt = robust_calc_Rt(
rt = robust_phi_results$epsilon,
phi = robust_phi_results$phi,
S = diag(2),
delta = .975
)
robust_Rt$w
Rt = robust_Rt$Rt
Rt
max(w)
min(w)
min(robust_Rt$w)
Rt = calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi)
Rt = calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi)
devtools::test()
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi)
devtools
devtools::test()
Rt = calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
Rt
devtools::test()
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))[1,2]
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
phi_results$eta
phi_results$eta$omega
phi_results$eta[1,]$omega
ht = calc_ht(rt=rt, phi=phi_results$eta, S=diag(2))
eta = phi_results$eta %>% select(omega, alpha, beta) %>% as.numeric
??select
devtools::test()
eta = phi_results$eta %>% select(omega, alpha, beta) %>% as.numeric
phi_results$eta
phi_results$eta %>% select(omega, alpha, beta)
eta = phi_results$eta %>% select(omega, alpha, beta) %>% as.matrix
eta
eta[1,1]
ht = calc_ht(rt=rt, eta=eta)
ht
rt
length(rt)
dim(rt)
nobs = length(rt)
# parameters
eta = as.numeric(eta)
omega = eta[1]
alpha = eta[2]
beta = eta[3]
calc_ht_C(omega, alpha, beta, rt, nobs)
assert(1==2, 'errou')
install.packages('testit')
library(testit)
library(testit)
assert(1==2, 'errou')
assert(1==1, 'errou')
assert('errou', 1==1)
assert('errou', 1==2)
ncol(rt)
assert('rt is not a vector', ncol(rt)==1)
devtools::test()
ht = calc_ht(rt=rt[,1], eta=eta)
rt[,1]
rt[,1] %>% is
rt %>% is
test = rt %>% is
test
test[1]
test[2]
dim(rt[,1])
dim(rt)
ncol(rt[,1])
is(rt)
is(rt)[2] == 'vector'
is.vector(rt[,1])
is.vector(rt)
devtools::test()
ht = calc_ht(rt=rt[,1], eta=eta)
ht
calc_ht(rt=rt, eta=eta)
calc_Dt(rt=rt, eta=eta)
eta
eta = phi_results$eta %>% select(omega, alpha, beta) %>% as.matrix
eta
as.numeric(eta)
calc_ht(rt=rt[,1], eta=eta)
eta
eta = phi_results$eta %>% select(omega, alpha, beta) %>% as.matrix
Dt = calc_Dt(rt=rt, eta=eta)
Dt
phi_results$Dt
phi_results$Dt == Dt
phi_results$Dt
phi_results$Dt %>% head
Dt %>% head
Dt %>% sqrt %>% head
eta
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
phi_results
phi_results$eta
eta
calc_ht(rt=rt[,1], eta=eta[1,])
calc_ht(rt=rt[,1], eta=eta[1,]) %>% head
phi_results$Dt[,1] %>% head
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
phi_results$Dt[,1] %>% head
phi_results$Dt[,1] %>% plot
phi_results$Dt[,1] %>% plot(., type='l')
calc_ht(rt=rt[,1], eta=eta[1,]) %>% plot(., type='l', add=TRUE)
calc_ht(rt=rt[,2], eta=eta[2,]) %>% plot(., type='l')
eta
devtools::test()
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
phi_results$eta
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
calc_Dt = function(rt, eta_df){
eta_lst = eta_df %>% apply(FUN=list, MARGIN=1) %>% map(1) %>% lapply(unlist)
rt_lst = rt %>% apply(FUN=list, MARGIN=2) %>% map(1)
Dt = mapply(
calc_ht,
rt_lst,
eta_lst,
SIMPLIFY = FALSE
) %>%
rlist::list.cbind(.)
return(Dt)
}
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
phi_results$eta
eta_df = phi_results$eta
eta_lst = eta_df %>% apply(FUN=list, MARGIN=1) %>% map(1) %>% lapply(unlist)
eta_lst
eta_lst[[1]]
eta_lst[[1]]$mu
eta_lst[[1]] %>% is
devtools::test()
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
Dt
phi_results$Dt == Dt
phi_results$Dt == Dt %>% all
(phi_results$Dt == Dt) %>% apply(all, MARGIN = 1)
(phi_results$Dt == Dt) %>% apply(all, MARGIN = 2)
(phi_results$Dt == Dt) %>% apply(all, MARGIN = 2) %>% all
devtools::test()
rm(list = c("calc_Dt"))
devtools::test()
devtools::test()
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
rDt = robust_calc_Dt(rt=rt, eta=phi_results$eta, delta = .975)
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
rDt = robust_calc_Dt(rt=rt, eta=phi_results$eta, delta = .975)
devtools::test()
rDt = robust_calc_Dt(rt=rt, eta=phi_results$eta, delta = .975)
devtools::test()
rDt = robust_calc_Dt(rt=rt, eta=phi_results$eta, delta = .975)
devtools::test()
eta_lst = eta_df %>% apply(FUN=list, MARGIN=1) %>% map(1) %>% lapply(unlist)
rt_lst = rt %>% apply(FUN=list, MARGIN=2) %>% map(1)
rt_lst
Dt = mapply(
robust_calc_ht,
rt_lst,
eta_lst,
MoreArgs = list(delta = delta),
SIMPLIFY = FALSE
) %>%
lapply(function(x){x[, 1]}) %>%
rlist::list.cbind(.)
delta=.975
Dt = mapply(
robust_calc_ht,
rt_lst,
eta_lst,
MoreArgs = list(delta = delta),
SIMPLIFY = FALSE
) %>%
lapply(function(x){x[, 1]}) %>%
rlist::list.cbind(.)
eta_lst[[1]]
rt = rt[,1]
eta = eta_lst[[1]]
robust_control = biv_robust_control(delta)
nobs = length(rt)
rt = rt - eta[1]
assert('rt in calc_ht is not a vector', is.vector(rt)==TRUE)
# robust parameters
cy = robust_control[1]
chisq = qchisq(delta, 1)
rt
robcdcc::robust_calc_ht_C(eta[2], eta[3], eta[4], rt, nobs, cy, chisq)
Dt_results = mapply(
robust_calc_ht,
rt_lst,
eta_lst,
MoreArgs = list(delta = delta),
SIMPLIFY = FALSE
)
Dt = Dt_results %>% map(1) %>% rlist::list.cbind(.)
w = Dt_results %>% map(2) %>% rlist::list.cbind(.)
Dt
w
devtools::test()
devtools::test()
devtools::test()
(robust_phi_results$Dt == rDt)
robust_phi_results
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
robust_phi_results$Dt
robust_phi_results$Dt == rDt
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
rDt_lst = robust_calc_Dt(rt=rt, eta=phi_results$eta, delta = .975)
rDt = rDt_lst$Dt
(robust_phi_results$Dt == rDt)
robust_phi_results$D %>% head
rDt %>% head
robust_phi_results$Dt %>% head
eta
rDt_lst = robust_calc_Dt(rt=rt, eta=robust_phi_results$eta, delta = .975)
rDt = rDt_lst$Dt
(robust_phi_results$Dt == rDt)
devtools::test()
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
rDt_lst = robust_calc_Dt(rt=rt, eta=robust_phi_results$eta, delta = .975)
rDt = rDt_lst$Dt
w = Dt_lst$w
w = rDt_lst$w
w
w %>% min
w %>% apply(min, MARGIN=2)
wmin = rDt_lst$w %>% apply(min, MARGIN=2)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(testit)
devtools::test()
devtools::test()
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
phi_results$Dt
phi_results$Dt %>% length(.)
phi_results$Dt %>% nrow(.)
nrows_diff = nrow(Dt) - nrow(rt)
Dt = calc_Dt(rt=rt, eta=phi_results$eta)
rDt_lst = robust_calc_Dt(rt=rt, eta=robust_phi_results$eta, delta = .975)
rDt = rDt_lst$Dt
wmin = rDt_lst$w %>% apply(min, MARGIN=2)
nrows_diff
nrows_diff = nrow(Dt) - nrow(rt)
nrows_diff
phi_results
phi_results$Dt %>% tail(1)
devtools::test()
geral_calc_portfolio_variance(phi=c(.1, .8),
q_phi=phi_results$phi,
r_phi=robust_phi_results$phi,
rt=rt,
burn_rt=rt[, 1],
cont_rt=rt,
S=diag(2),
Dt=diag(2),
q_Dt=phi_results$Dt %>% tail(1),
r_Dt=robust_phi_results$Dt %>% tail(1),
delta=.975)
devtools::test()
geral_calc_portfolio_variance(phi=c(.1, .8),
q_phi=phi_results$phi,
r_phi=robust_phi_results$phi,
rt=rt,
burn_rt=rt[, 1],
cont_rt=rt,
S=diag(2),
Dt=diag(2),
q_Dt=phi_results$Dt %>% tail(1),
r_Dt=robust_phi_results$Dt %>% tail(1),
delta=.975)
geral_calc_portfolio_variance(phi=c(.1, .8),
q_phi=phi_results$phi,
r_phi=robust_phi_results$phi,
rt=rt,
burn_rt=rt[, 1],
cont_rt=rt,
S=diag(2),
Dt=diag(2),
q_Dt=phi_results$Dt %>% tail(1),
r_Dt=robust_phi_results$Dt %>% tail(1),
q_S=diag(2),
r_S=diag(2),
delta=.975)
phi_results$Dt %>% tail(1)
phi_results$Dt %>% tail(1) %>% diag
phi_results$Dt %>% tail(1) %>% diag(.)
phi_results$Dt %>% tail(1) %>% as.vector
phi_results$Dt %>% tail(1) %>% as.vector %>% diag
geral_calc_portfolio_variance(
phi = c(.1, .8),
q_phi = phi_results$phi,
r_phi = robust_phi_results$phi,
rt = rt,
burn_rt = rt[, 1],
cont_rt = rt,
S = diag(2),
Dt = diag(2),
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
q_S = diag(2),
r_S = diag(2),
delta = .975
)
diag(2)
rt[, 1]
rt[1, ]
rt[1:2, ]
geral_calc_portfolio_variance(
phi = c(.1, .8),
q_phi = phi_results$phi,
r_phi = robust_phi_results$phi,
rt = rt,
burn_rt = rt[1:2, ],
cont_rt = rt,
S = diag(2),
Dt = diag(2),
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
q_S = diag(2),
r_S = diag(2),
delta = .975
)
results_lst = geral_calc_portfolio_variance(
phi = c(.1, .8),
q_phi = phi_results$phi,
r_phi = robust_phi_results$phi,
rt = rt,
burn_rt = rt[1:2, ],
cont_rt = rt,
S = diag(2),
Dt = diag(2),
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
q_S = diag(2),
r_S = diag(2),
delta = .975
)
results_lst
results_lst$portfolio_metics
results_lst$portfolio_metics = as.data.frame(results_lst$portfolio_metics)
results_lst$portfolio_metics
c(rep(c('evout', 'fro'), each=2),
rep('gmv', 3))
results_lst$portfolio_metics = as.data.frame(results_lst$portfolio_metics)
results_lst$portfolio_metics$metric = c(rep(c('evout', 'fro'), each=2),
rep('gmv', 3))
results_lst$portfolio_metics$metric
results_lst$portfolio_metics
rep(c('Q', 'R'), 2)
results_lst$portfolio_metics$model = c(rep(c('Q', 'R'), 2), 'real', 'Q', 'R')
results_lst$portfolio_metics
devtools::test()
results_lst = geral_calc_portfolio_variance(
phi = c(.1, .8),
q_phi = phi_results$phi,
r_phi = robust_phi_results$phi,
rt = rt,
burn_rt = rt[1:2, ],
cont_rt = rt,
S = diag(2),
Dt = diag(2),
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
q_S = diag(2),
r_S = diag(2),
delta = .975
)
results_lst$portfolio_metics
results_lst$Rt
results_lst$Ht
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag
q_Dt
r_Dt
Rt = sqrt(1/q_Dt) %*% results_lst$q_Ht %*% sqrt(1/q_Dt)
Rt
q_Dt
sqrt(1/q_Dt)
diag(sqrt(1/diag(q_Dt)))
Rt = diag(sqrt(1/diag(q_Dt))) %*% results_lst$q_Ht %*% diag(sqrt(1/diag(q_Dt)))
Rt
diag(sqrt(1/diag(q_Dt)))
results_lst$q_Ht
q_Dt
phi_results$Dt %>% tail(1) %>% as.vector %>% diag
phi_results$Dt %>% tail(1) %>% as.vector %>% diag %>% sqrt
results_lst = geral_calc_portfolio_variance(
phi = c(.1, .8),
q_phi = phi_results$phi,
r_phi = robust_phi_results$phi,
rt = rt,
burn_rt = rt[1:2, ],
cont_rt = rt,
S = diag(2),
Dt = diag(2),
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag %>% sqrt,
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag %>% sqrt,
q_S = diag(2),
r_S = diag(2),
delta = .975
)
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag %>% sqrt
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag %>% sqrt
q_Dt
results_lst$q_Ht
0.91430563 %>% sqrt
Rt = diag(sqrt(1/diag(q_Dt))) %*% results_lst$q_Ht %*% diag(sqrt(1/diag(q_Dt)))
Rt
devtools::test)
devtools::test()
results_lst = geral_calc_portfolio_variance(
phi = c(.1, .8),
q_phi = phi_results$phi,
r_phi = robust_phi_results$phi,
rt = rt,
burn_rt = rt[1:2, ],
cont_rt = rt,
S = diag(2),
Dt = diag(2),
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag,
q_S = diag(2),
r_S = diag(2),
delta = .975
)
results_lst$q_Ht
devtools::test()
results_lst$q_Ht[1,2]
results_lst$q_Ht
q_Dt = phi_results$Dt %>% tail(1) %>% as.vector %>% diag %>% sqrt
r_Dt = robust_phi_results$Dt %>% tail(1) %>% as.vector %>% diag %>% sqrt
Rt = diag(1/diag(q_Dt)) %*% results_lst$q_Ht %*% diag(1/diag(q_Dt))
Rt
validate_Rt = calc_Rt(rt=phi_results$epsilon, phi=phi_results$phi, S=diag(2))
validate_Rt
calc_Qs_C
library(robcdcc)
rt = simCDCC_C(phi=c(.1, .8), S=diag(2), nobs=1000, seed=1)
phi_results = estimateCDCC(rt)
robust_phi_results = robust_estimateCDCC(rt, delta=.975)
qQs = calc_Qs(rt=rt, phi=phi_results$phi)
qQs
biv_robust_control = function(delta){
rc = robust_control = case_when(
delta == .99 ~ c(1.0185, 1.0101, .99),
delta == .975 ~ c(1.0465, 1.0257, .975),
delta == .95 ~ c(1.0953, 1.0526, .95),
delta == .90 ~ c(1.2030, 1.111, .90),
TRUE ~ c(fc(delta, 1), fc(delta, 2), delta))
return(rc)
}
biv_robust_control(.975)
library(dplyr)
biv_robust_control(.975)
biv_robust_control(.90)
biv_robust_control(.901)
library(robcdcc)
devtools::test()
rm(list = c("biv_robust_control"))
devtools::test()
